{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["Indian","0","1","2","3","4","5","6","7","8","Order","numberToText","number","split","reverse","join","chunks","push","slice","length","map","num","idx","elevated","arguments","undefined","stack","numbers","String","i","position","agg","reduce","curr","Object","keys","sort","b","a","getDigitName","digit","name","Number","getTens","getDecimalValue","getAnswerTillCrore","prototype","chunk","size","concat","apply","this","x","App","_useState","useState","_useState2","slicedToArray","setNumber","_useState3","_useState4","buttonText","setButtonText","useEffect","toString","react_default","createElement","className","type","value","placeholder","onChange","e","target","readOnly","id","onClick","register","event","document","getElementById","select","execCommand","isLocalhost","Boolean","window","location","hostname","match","config","navigator","URL","process","href","origin","console","log","swUrl","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","beginInstallation","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","__webpack_require__","d","__webpack_exports__","src_register","ReactDOM","render","src_App","confirm","getRegistrations","registrations","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return"],"mappings":"8NAGMA,SAAS,CACbC,EAAE,GACFC,EAAE,GACFC,EAAE,UACFC,EAAE,WACFC,EAAE,WACFC,EAAE,MACFC,EAAE,MACFC,EAAE,QACFC,EAAE,UAIEC,EAAM,CAAC,QAAQ,MAAM,WAAW,UAAU,IAOhD,SAASC,EAAaC,GACpBA,EAASA,EAAOC,MAAM,IAAIC,UAAUC,KAAK,IACzC,IAAIC,EAAS,GAGb,IAFAA,EAAOC,KAAKL,EAAOM,MAAM,EAAE,IAC3BN,EAAOA,EAAOM,MAAM,GACdN,EAAOO,QACXH,EAAOC,KAAKL,EAAOM,MAAM,EAAE,IAC3BN,EAASA,EAAOM,MAAM,GAGxB,OAAOF,EAAOF,UAAUM,IAAI,SAACC,EAAKC,GAAN,OAG9B,SAA4BV,GAG1B,IAHiD,IAAfW,EAAeC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,GAC7CE,EAAQ,GACRC,EAAUC,OAAOhB,GAAQC,MAAM,IAAIO,IAAI,SAAAS,GAAC,OAAEA,IAAGf,UACzCe,EAAI,EAAGA,EAAIF,EAAQR,OAAOU,GAAG,EACnCH,EAAMT,KAAK,CAACa,SAASP,EAAWvB,EAAO6B,EAAE,GAAK7B,EAAO6B,GAAIjB,OAAQe,EAAQE,KAE3E,IAAIE,EAAML,EAAMM,OAAO,SAACD,EAAKE,EAAMX,GAEjC,OADAS,EAAIE,EAAKH,UAAYG,EAAKrB,QAAUmB,EAAIE,EAAKH,WAAa,IACnDC,GACP,IAGF,OADUG,OAAOC,KAAKJ,GAAKK,KAAK,SAACC,EAAGC,GAAJ,OAAQ5B,EAAM4B,GAAG5B,EAAM2B,KAAIjB,IAAI,SAAAU,GAAQ,OAIzE,SAAyBlB,GACrB,GAAqB,IAAlBA,EAAOO,OAAc,OAAOoB,EAAa3B,GAE1C,GAAiB,MAAdA,EAAO,GA2BR,OAKR,SAAiB4B,GACf,IAAIC,EACJ,OAAOC,OAAOF,IACV,KAAK,EACHC,EAAM,SACN,MACF,KAAK,EACHA,EAAM,SACN,MACF,KAAK,EACHA,EAAM,SACN,MACF,KAAK,EACHA,EAAM,QACN,MACF,KAAK,EACHA,EAAM,QACN,MACF,KAAK,EACHA,EAAM,UACN,MACF,KAAK,EACHA,EAAM,SACN,MACF,KAAK,EACHA,EAAM,SACN,MACF,QACEA,EAAK,GAEX,OAAOA,EAnCME,CAAQ/B,EAAO,IAAI,IAAI2B,EAAa3B,EAAO,IA1BlD,OAAO8B,OAAO9B,EAAO,KACnB,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAQ,SACV,KAAK,EACH,MAAQ,SACV,KAAK,EACH,MAAQ,WACV,KAAK,EACH,MAAQ,WACV,KAAK,EACH,MAAQ,UACV,KAAK,EACH,MAAQ,UACV,KAAK,EACH,MAAQ,YACV,KAAK,EACH,MAAQ,WACV,KAAK,EACH,MAAQ,WACV,QACE,MAAO,IA9BwDgC,CAAgBb,EAAID,IAAW,IAAIA,IACjGhB,UAAUC,KAAK,KAfc8B,CAAmBxB,EAAIR,MAAM,IAAIC,UAAUC,KAAK,IAAKO,EAAMN,EAAOG,OAAS,KAAIJ,KAAK,KAsF9H,SAASwB,EAAaC,GACpB,IAAIC,EACJ,OAAOC,OAAOF,IACV,KAAK,EACHC,EAAM,MACN,MACF,KAAK,EACHA,EAAM,MACN,MACF,KAAK,EACHA,EAAM,QACN,MACF,KAAK,EACHA,EAAM,OACN,MACF,KAAK,EACHA,EAAM,OACN,MACF,KAAK,EACHA,EAAM,MACN,MACF,KAAK,EACHA,EAAM,QACN,MACF,KAAK,EACHA,EAAM,QACN,MACF,KAAK,EACHA,EAAM,OACN,MACF,QACEA,EAAK,GAEX,OAAOA,EAvITb,OAAOkB,UAAUC,MAAQ,SAASC,GAChC,MAAO,GAAGC,OAAOC,MAAM,GACnBC,KAAKtC,MAAM,IAAIO,IAAI,SAASgC,EAAEvB,GAAI,OAAOA,EAAEmB,EAAO,GAAKG,KAAKjC,MAAMW,EAAEA,EAAEmB,IAASG,QAsKtEE,MA9Bf,WAAe,IAAAC,EACeC,mBAAS,IADxBC,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAoB,EAAA,GACN1C,EADM4C,EAAA,GACEE,EADFF,EAAA,GAAAG,EAEuBJ,mBAAS,eAFhCK,EAAA1B,OAAAuB,EAAA,EAAAvB,CAAAyB,EAAA,GAENE,EAFMD,EAAA,GAEME,EAFNF,EAAA,GAYb,OAJAG,oBAAU,WACwB,IAA7BnD,EAAOoD,WAAW7C,QAAc2C,EAAc,cACjB,IAA7BlD,EAAOoD,WAAW7C,QAAc2C,EAAc,sBACjD,CAAClD,IAEDqD,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,WAGfF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,sBACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OACbF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,gBACbF,EAAA3B,EAAA4B,cAAA,SAAOE,KAAK,SAASC,MAAOzD,EAAQ0D,YAAY,eAAeC,SAAU,SAAAC,GAAC,OAAEd,EAAUc,EAAEC,OAAOJ,WAEjGJ,EAAA3B,EAAA4B,cAAA,YAAUQ,UAAQ,EAACP,UAAU,iBAAiBQ,GAAG,SAC/CN,MAAO1D,EAAaC,KACtBqD,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,OAAOS,QAAsC,IAA7BhE,EAAOoD,WAAW7C,OAAe0D,EArBhD,SAAAC,GACLC,SAASC,eAAe,UAC9BC,SACTF,SAASG,YAAY,UAkB4ErB,OCvKjGsB,EAAuBC,QACE,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAIC,SAASX,EAASY,GACvB,GAAI,kBAAmBC,UAAW,CAGhC,GADkB,IAAIC,IAAIC,mBAAwBP,OAAOC,SAASO,MACpDC,SAAWT,OAAOC,SAASQ,OAIvC,OAEFC,QAAQC,IAAI,8BAKhB,SAA2BP,GACzB,IAAMQ,EAAK,GAAAhD,OAAM2C,mBAAN,0BAEPT,IA+DN,SAAiCc,EAAOR,GAEtCS,MAAMD,GACHE,KAAK,SAAAC,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5Cf,UAAUgB,cAAcC,MAAMR,KAAK,SAAAS,GACjCA,EAAaC,aAAaV,KAAK,WAC7Bd,OAAOC,SAASwB,aAKpBC,EAAgBd,EAAOR,KAG1BuB,MAAM,WACLjB,QAAQC,IACN,mEApFJiB,CAAwBhB,EAAOR,GAI/BC,UAAUgB,cAAcC,MAAMR,KAAK,WACjCJ,QAAQC,IACN,gHAMJe,EAAgBd,EAAOR,GArBvByB,CAAkBzB,IAyBtB,SAASsB,EAAgBd,EAAOR,GAC9BC,UAAUgB,cACP7B,SAASoB,GACTE,KAAK,SAAAS,GACJA,EAAaO,cAAgB,WAC3B,IAAMC,EAAmBR,EAAaS,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WAC/BvB,QAAQC,IAAI,iBAAkBoB,EAAiBG,OAChB,cAA3BH,EAAiBG,QACf7B,UAAUgB,cAAcc,YAI1BzB,QAAQC,IACN,iHAKEP,GAAUA,EAAOgC,UACnBhC,EAAOgC,SAASb,KAMlBb,QAAQC,IAAI,sCAGRP,GAAUA,EAAOiC,WACnBjC,EAAOiC,UAAUd,UAO5BI,MAAM,SAAAW,GACL5B,QAAQ4B,MAAM,4CAA6CA,KCnGjEC,EAAAC,EAAAC,EAAA,6BAAAC,IAMAC,IAASC,OAAOhE,EAAA3B,EAAA4B,cAACgE,EAAD,MAASnD,SAASC,eAAe,SAKjD,IAAMS,EAAS,CACXgC,SAAS,SAAAb,GACLb,QAAQC,IAAI,gBAAiBY,GAC1BvB,OAAO8C,QAAQ,kCACdzC,UAAUgB,cAAc0B,mBACvBjC,KAAK,SAAAkC,GAAe,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA/G,EAAA,IACjB,QAAAgH,EAAAC,EAAeL,EAAfM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA6B,CAAAG,EAAApE,MACrBwC,cAFS,MAAAkC,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,GAKjBnD,OAAOC,SAASwB,YAI5BY,UAAU,SAAAd,GACNb,QAAQC,IAAI,2BAA4BY,KAGzC,SAAS/B,EAASC,GACrBiB,QAAQC,IAAI,wBACZU,EAAuBjB","file":"static/js/main.3ac91fde.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { register } from './index.js'\nimport './App.scss';\nconst Indian = {\n  0:'',\n  1:'',\n  2:'hundred',\n  3:'thousand',\n  4:'thousand',\n  5:'lac',\n  6:'lac',\n  7:'crore',\n  8:'crore'\n}\n\n\nconst Order=['crore','lac','thousand','hundred','']\nString.prototype.chunk = function(size) {\n  return [].concat.apply([],\n      this.split('').map(function(x,i){ return i%size ? [] : this.slice(i,i+size) }, this)\n  )\n}\n\nfunction numberToText(number){\n  number = number.split(\"\").reverse().join(\"\")\n  let chunks = []\n  chunks.push(number.slice(0,9))\n  number=number.slice(9,)\n  while(number.length){\n    chunks.push(number.slice(0,7))\n    number = number.slice(7,)\n  }\n  \n  return chunks.reverse().map((num, idx)=>getAnswerTillCrore(num.split(\"\").reverse().join(\"\"), idx < chunks.length - 1)).join(\" \")\n}\n\nfunction getAnswerTillCrore(number, elevated=false){\n  let stack = []\n  let numbers = String(number).split(\"\").map(i=>i).reverse()\n  for(let i = 0; i < numbers.length;i+=1){\n    stack.push({position:elevated ? Indian[i+2] : Indian[i], number: numbers[i]})\n  }\n  let agg = stack.reduce((agg, curr, idx)=>{\n    agg[curr.position] = curr.number + (agg[curr.position] || \"\")\n    return agg\n  },{})\n\n  let ans = Object.keys(agg).sort((b, a)=>Order[a]-Order[b]).map(position=>getDecimalValue(agg[position])+\" \"+position)\n  return ans.reverse().join(\" \");\n}\n\nfunction getDecimalValue(number){\n    if(number.length === 1) return getDigitName(number)\n    else{\n      if(number[0] === '1'){\n        switch(Number(number[1])){\n          case 0:\n            return 'ten'\n          case 1:\n            return  'eleven'\n          case 2:\n            return  'twelve'\n          case 3:\n            return  'thirteen'\n          case 4:\n            return  'fourteen'\n          case 5:\n            return  'fifteen'\n          case 6:\n            return  'sixteen'\n          case 7:\n            return  'seventeen'\n          case 8:\n            return  'eighteen'\n          case 9:\n            return  'nineteen'\n          default:\n            return ''\n        }\n      }\n      else{\n        return getTens(number[0])+\" \"+getDigitName(number[1])\n      }\n    }\n}\n\nfunction getTens(digit){\n  let name\n  switch(Number(digit)){\n      case 2:\n        name= 'twenty'\n        break\n      case 3:\n        name= 'thirty'\n        break\n      case 4:\n        name= 'fourty'\n        break\n      case 5:\n        name= 'fifty'\n        break\n      case 6:\n        name= 'sixty'\n        break\n      case 7:\n        name= 'seventy'\n        break\n      case 8:\n        name= 'eighty'\n        break\n      case 9:\n        name= 'ninety'\n        break\n      default:\n        name=''\n  }\n  return name\n}\n\nfunction getDigitName(digit){\n  let name\n  switch(Number(digit)){\n      case 1:\n        name= 'one'\n        break\n      case 2:\n        name= 'two'\n        break\n      case 3:\n        name= 'three'\n        break\n      case 4:\n        name= 'four'\n        break\n      case 5:\n        name= 'five'\n        break\n      case 6:\n        name= 'six'\n        break\n      case 7:\n        name= 'seven'\n        break\n      case 8:\n        name= 'eight'\n        break\n      case 9:\n        name= 'nine'\n        break\n      default:\n        name=''\n  }\n  return name\n}\n\nfunction App() {\n  const [number, setNumber] = useState(\"\");\n  const [buttonText, setButtonText] = useState('use offline')\n  const copyToClipboard = event => {\n      var copyText = document.getElementById(\"result\");\n      copyText.select();\n      document.execCommand(\"copy\");\n  }\n  useEffect(()=>{\n    if(number.toString().length === 0) setButtonText('go offline')\n    if(number.toString().length === 1) setButtonText('copy to clipboard')\n  },[number])\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n\n      </div>\n      <div className=\"body n2w-container\">\n        <div className=\"n2w\">\n          <div className=\"number-input\">\n            <input type=\"number\" value={number} placeholder=\"Enter number\" onChange={e=>setNumber(e.target.value)}/>\n          </div>\n          <textarea readOnly className=\"text-container\" id=\"result\"\n            value={numberToText(number)}/>\n          <div className='copy' onClick={number.toString().length === 0 ? register : copyToClipboard}>{buttonText}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = false || Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    console.log('checking for window.onload')\n    beginInstallation(config);\n  }\n}\n\nfunction beginInstallation(config){\n  const swUrl = `${process.env.PUBLIC_URL}/number-to-words-sw.js`;\n\n  if (isLocalhost) {\n    // This is running on localhost. Let's check if a service worker still exists or not.\n    checkValidServiceWorker(swUrl, config);\n\n    // Add some additional logging to localhost, pointing developers to the\n    // service worker/PWA documentation.\n    navigator.serviceWorker.ready.then(() => {\n      console.log(\n        'This web app is being served cache-first by a service ' +\n          'worker. To learn more, visit https://bit.ly/CRA-PWA'\n      );\n    });\n  } else {\n    // Is not localhost. Just register service worker\n    registerValidSW(swUrl, config);\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          console.log('current state ', installingWorker.state)\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './registerServiceWorker.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nconst config = {\n    onUpdate:registration=>{\n        console.log('update found ', registration)\n        if(window.confirm('New update is found. Update ?')){\n            navigator.serviceWorker.getRegistrations()\n            .then(registrations=>{\n                for(let reg of registrations){\n                    reg.unregister()\n                }\n                // registration.skipWating()\n                window.location.reload();\n            })\n        }\n    },\n    onSuccess:registration=>{\n        console.log('success fully installed ', registration)\n    }\n}\nexport function register(event){\n    console.log('starting to register')\n    serviceWorker.register(config);\n}\n"],"sourceRoot":""}